def sudoku2(grid):
    def checkRow(row):
        row = [x for x in row if x != '.']
        return len(set(row)) == len(row)

    for i in range(len(grid)):
        # Check rows
        if checkRow(grid[i]) is False: return False
        # Check columns
        if checkRow([grid[j][i] for j in range(len(grid))]) is False: return False

    # Check 3x3 grid
    for row in [0, 3, 6]:
        for col in [0, 3, 6]:
            subgrid = grid[row][col: col + 3] + grid[row + 1][col:col + 3] + grid[row + 2][col: col + 3]
            if checkRow(subgrid) is False: return False

    return True


""" TESTING """

grid = [['.', '.', '.', '1', '4', '.', '.', '2', '.'],
        ['.', '.', '6', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '1', '.', '.', '.', '.', '.', '.'],
        ['.', '6', '7', '.', '.', '.', '.', '.', '9'],
        ['.', '.', '.', '.', '.', '.', '8', '1', '.'],
        ['.', '3', '.', '.', '.', '.', '.', '.', '6'],
        ['.', '.', '.', '.', '.', '7', '.', '.', '.'],
        ['.', '.', '.', '5', '.', '.', '.', '7', '.']]  # True

# grid = [['.', '.', '.', '.', '2', '.', '.', '9', '.'],
#         ['.', '.', '.', '.', '6', '.', '.', '.', '.'],
#         ['7', '1', '.', '.', '7', '5', '.', '.', '.'],
#         ['.', '7', '.', '.', '.', '.', '.', '.', '.'],
#         ['.', '.', '.', '.', '8', '3', '.', '.', '.'],
#         ['.', '.', '8', '.', '.', '7', '.', '6', '.'],
#         ['.', '.', '.', '.', '.', '2', '.', '.', '.'],
#         ['.', '1', '.', '2', '.', '.', '.', '.', '.'],
#         ['.', '2', '.', '.', '3', '.', '.', '.', '.']]  # False

grid = [[".", ".", ".", ".", ".", ".", "5", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", "."],
        ["9", "3", ".", ".", "2", ".", "4", ".", "."],
        [".", ".", "7", ".", ".", ".", "3", ".", "."],
        [".", ".", ".", ".", ".", ".", ".", ".", "."],
        [".", ".", ".", "3", "4", ".", ".", ".", "."],
        [".", ".", ".", ".", ".", "3", ".", ".", "."],
        [".", ".", ".", ".", ".", "5", "2", ".", "."]]  # False

print(sudoku2(grid))
